name: Terraform Pipeline

on:
  pull_request:
    branches:
      - develop
      
  issue_comment:
    types:
      - created

jobs:
  terraform-plan:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
      with:
        fetch-depth: 2

    - name: Check for "plan" label
      id: label
      uses: actions/github-script@v5
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          const { context } = github;
          const labelName = 'plan';
          const prNumber = context.payload.pull_request.number;
          const { data: labels } = await octokit.issues.listLabelsOnIssue({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: prNumber
          });
          return labels.some(label => label.name === labelName);

    - name: Terraform init
      if: steps.label.outputs.result == 'true'
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.3.0

    - name: Terraform plan
      if: steps.label.outputs.result == 'true'
      run: terraform plan -out=plan.out

  merge-pipeline:
    needs:
      - terraform-plan
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    # Add your Terraform apply and other configuration steps here
    # ...
